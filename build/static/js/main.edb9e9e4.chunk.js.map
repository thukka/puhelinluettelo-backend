{"version":3,"sources":["components/GetNames.js","components/Filter.js","components/PersonForm.js","components/Notification.js","services/persons.js","App.js","index.js"],"names":["Contact","props","name","number","onClick","RemoveContact","personId","GetNames","persons","filterName","length","map","i","id","filter","toLowerCase","includes","Filter","inputHandleFilter","value","onChange","PersonForm","SubmitFormAction","newName","newNumber","inputHandle","inputHandlePhone","onSubmit","type","Notification","message","isError","StyleSuccess","color","fontSize","borderStyle","padding","borderRadius","marginBottom","ErrorStyle","style","baseUrl","axios","get","then","response","data","NewName","post","delete","changedUser","put","NullMessage","setMessage","setIsError","setTimeout","App","useState","setPersons","setNewName","setNewNumber","setFilterName","useEffect","personsService","allPersons","event","target","preventDefault","matchFound","forEach","item","checkForDoubles","window","confirm","user","find","n","changedInfo","person","catch","error","newPerson","concat","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.edb9e9e4.chunk.js","sourcesContent":["import React from 'react'\n\nconst Contact = ( props ) => {\n    return <>{props.name} {props.number} <button onClick={() => props.RemoveContact(props.personId, props.name)}>delete</button> <br /></>\n}\n\nconst GetNames = ({ persons, filterName, RemoveContact }) => {\n    if (filterName.length === 0) {\n        return persons.map(i => <Contact personId={i.id} name={i.name} number={i.number} key={i.name} RemoveContact={RemoveContact} />)\n    }\n    else {\n        let filtered = persons.filter(i => i.name.toLowerCase().includes(filterName.toLowerCase()))\n        return filtered.map(i => <Contact personId={i.id} name={i.name} number={i.number} key={i.name} RemoveContact={RemoveContact} />)\n    }\n}\n\nexport default GetNames","import React from 'react'\n\nconst Filter = ({ filterName, inputHandleFilter }) => {\n    return (\n        <div>\n            filter shown with <input value={filterName} onChange={inputHandleFilter} />\n        </div>\n    )\n}\n\nexport default Filter","import React from 'react'\n\nconst PersonForm = ({ SubmitFormAction, newName, newNumber, inputHandle, inputHandlePhone }) => {\n    return (\n        <form onSubmit={SubmitFormAction}>\n            <div>\n                name: <input value={newName} onChange={inputHandle} />\n            </div>\n            <div>\n                number: <input value={newNumber} onChange={inputHandlePhone} />\n            </div>\n            <div>\n                <button type=\"submit\">add</button>\n            </div>\n        </form>\n    )\n}\n\nexport default PersonForm","import React from 'react'\n\nconst Notification = ({ message, isError }) => {\n    if (message === null) {\n      return null;\n    }\n  \n    const StyleSuccess = {\n      color: 'green',\n      fontSize: 24,\n      borderStyle: 'solid',\n      padding: 10,\n      borderRadius: 5,\n      marginBottom: 10,\n    }\n  \n    const ErrorStyle = {...StyleSuccess, color: 'red'}\n  \n    if (isError === true) {\n      return (\n        <div style={ErrorStyle}>\n          {message}\n        </div>\n      )\n    }\n  \n    return (\n      <div style={StyleSuccess}>\n        {message}\n      </div>\n    )\n  }\n\nexport default Notification","import axios from 'axios'\nconst baseUrl = '/api/persons'\n\n\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n    return request.then(response => response.data)\n}\n\nconst create = (NewName) => {\n    const request = axios.post(baseUrl, NewName)\n    return request.then(response => response.data)\n}\n\nconst removeUser = (personId) => {\n    const request = axios.delete(`${baseUrl}/${personId}`)\n    return request.then(response => response.data)\n}\n\nconst updateInfo = (personId, changedUser) => {\n    const request = axios.put(`${baseUrl}/${personId}`, changedUser)\n    return request.then(response => response.data)\n}\n\n/* eslint import/no-anonymous-default-export: [2, {\"allowObject\": true}] */\nexport default { getAll, create, removeUser, updateInfo }","import React, { useState, useEffect } from 'react'\nimport GetNames from './components/GetNames'\nimport Filter from './components/Filter'\nimport PersonForm from './components/PersonForm'\nimport Notification from './components/Notification'\nimport personsService from './services/persons'\nimport './index.css'\n\nconst NullMessage = (setMessage, setIsError) =>\n  setTimeout(() => {\n    setMessage(null)\n    setIsError(false)\n  }, 5000)\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [filterName, setFilterName] = useState('')\n  const [message, setMessage] = useState(null)\n  const [isError, setIsError] = useState(false)\n\n  const inputHandle = (event) => setNewName(event.target.value)\n  const inputHandlePhone = (event) => setNewNumber(event.target.value)\n  const inputHandleFilter = (event) => setFilterName(event.target.value)\n\n  useEffect(() => {\n    personsService.getAll()\n      .then(allPersons => setPersons(allPersons))\n  }, [])\n\n  const checkForDoubles = (newName) => {\n    let matchFound = false\n    persons.forEach((item) => {\n      if (item.name === newName) {\n        matchFound = true\n      }\n    })\n    return matchFound\n  }\n\n  const SubmitFormAction = (event) => {\n    event.preventDefault()\n\n    if (checkForDoubles(newName)) {\n      if (window.confirm(`${newName} is already on the list, replace the old number with a new one?`)) {\n        const user = persons.find(n => n.name === newName)\n        const changedUser = { ...user, number: newNumber }\n        personsService.updateInfo(changedUser.id, changedUser)\n          .then(changedInfo => {\n            setPersons(persons.map(person => person.id !== changedUser.id ? person : changedInfo))\n            setMessage(`${newName} number updated`)\n          })\n          .catch(error => {\n            setIsError(true)\n            setMessage(`Error with updating '${newName}', user might have been already deleted from the server`)\n            personsService.getAll().then(allPersons => setPersons(allPersons))\n          }\n          )\n        NullMessage(setMessage, setIsError)\n      }\n    } else {\n      const getNewName = {\n        name: newName,\n        number: newNumber,\n      }\n      personsService\n        .create(getNewName)\n        .then(newPerson => {\n          setPersons(persons.concat(newPerson))\n          setNewName('')\n          setNewNumber('')\n          setMessage(`${newPerson.name} added to the list`)\n        }\n        )\n      NullMessage(setMessage, setIsError)\n    }\n  }\n\n  const RemoveContact = (id, name) => {\n    if (window.confirm(`Do you really want to delete ${name}?`)) {\n      personsService.removeUser(id)\n        .then(setPersons(persons.filter(n => n.id !== id)))\n        .then(setMessage(`${name} was deleted`))\n        .catch(error => {\n          setIsError(true)\n          setMessage(`Error with updating '${name}', user might have been already deleted from the server`)\n          personsService.getAll().then(allPersons => setPersons(allPersons))\n        }\n        )\n    }\n    NullMessage(setMessage, setIsError)\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={message} isError={isError} />\n      <Filter filterName={filterName} inputHandleFilter={inputHandleFilter} />\n      <h2>add new</h2>\n      <PersonForm\n        SubmitFormAction={SubmitFormAction}\n        newName={newName}\n        newNumber={newNumber}\n        inputHandle={inputHandle}\n        inputHandlePhone={inputHandlePhone}\n      />\n      <h2>Numbers</h2>\n      <div>\n        <GetNames persons={persons} filterName={filterName} RemoveContact={RemoveContact} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}